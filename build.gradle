//Easy semantic version based off describe + tags
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--long'
        standardOutput = stdout
    }
    def tagVer = stdout.toString().trim()
    def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

    if (tagVer.contains('dev')) {
        semVer += "-SNAPSHOT"
    }
    return semVer
}

description = "Java Framework for building clustered RESTful web applications"
group = "com.geekbeast"
version = getVersionName()

apply plugin: "maven-publish"
apply plugin: "application"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: "idea"
//apply plugin: "war"
//apply from: "publish.gradle"
apply plugin: "signing"

mainClassName = "com.geekbeast.rhizome.core.Rhizome"

ext.sourceCompatibility=JavaVersion.VERSION_1_7
ext.targetCompatibility=JavaVersion.VERSION_1_7

repositories {
    mavenCentral()  
    maven {
        url "https://build.shibboleth.net/nexus/content/groups/public/"
    }
    maven {
        url "http://maven.springframework.org/snapshot"
    }
    maven {
        url "http://maven.springframework.org/milestone"
    } 
    maven {
        url "http://repo.maven.apache.org/maven2"
    } 
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

ext.spring_security_version='3.2.4.RELEASE'
ext.spring_framework_version='4.0.6.RELEASE'
ext.jackson_version='2.4.1'
ext.jetty_version='9.2.2.v20140723'
ext.hazelcast_version='3.2.4'
dependencies {
    /*
     * Servlet API 3.1 
     * 100% Java Servlet Container and Servlet Configuration
     */
     compile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
     compile 'javax.servlet:javax.servlet-api:3.1.0'
     compile group: 'javax.servlet', name: 'jstl', version:'1.2'

    /*
     * SL4J + LOG4J
     * Currently use Log4J through sl4j. 
     * TODO: Switch to logback
     */
     compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.5'
     compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'

//    compile "ch.qos.logback:logback-classic:1.0.13"
compile "log4j:log4j:1.2.17"

    /*
     * CORE SPRING FRAMEWORK DEPENDENCIES
     * Depending injection, asynchronous execution, task scheduling, aspect oriented proxies, and more.
     */
     compile "org.springframework:spring-core:${project.spring_framework_version}"
     compile "org.springframework:spring-beans:${project.spring_framework_version}"
     compile "org.springframework:spring-context:${project.spring_framework_version}"
     compile "org.springframework:spring-aop:${project.spring_framework_version}"
     compile "org.springframework:spring-web:${project.spring_framework_version}"
     compile "org.springframework:spring-webmvc:${project.spring_framework_version}"
     compile "org.springframework:spring-test:${project.spring_framework_version}"

    /*
     * SPRING SECURITY DEPENDENCIES
     * Solid and battle tested security AuthN/AuthZ framwork
     */
     compile "org.springframework.security:spring-security-core:${project.spring_security_version}"
     compile "org.springframework.security:spring-security-web:${project.spring_security_version}"
     compile "org.springframework.security:spring-security-ldap:${project.spring_security_version}"
     compile "org.springframework.security:spring-security-config:${project.spring_security_version}"

    /*
     * Metrics
     * Awesome reporting-- defaults to Graphite
     * TODO: Integrate Ryan's Spring integration 
     */
     compile 'com.codahale.metrics:metrics-core:3.0.2'
     compile 'com.codahale.metrics:metrics-servlets:3.0.2'
     compile 'com.codahale.metrics:metrics-graphite:3.0.2'
     compile 'com.ryantenney.metrics:metrics-spring:3.0.1'

    /*
     * GUAVA 
     * EventBus, FluentIterables, ListenableFutures and more
     */
     compile 'com.google.guava:guava:15.0'

    /*
     JODA TIME - A better datetime class.
     */
     compile 'joda-time:joda-time:2.3'

    /*
     * APACHE COMMONS
     * Logging, StringUtils, RandomStringUtils, IOUtils, and more
     */

     compile 'commons-io:commons-io:2.4'
     compile 'org.apache.commons:commons-lang3:3.1'
     compile 'commons-logging:commons-logging:1.1.3'
     compile 'commons-collections:commons-collections:3.2.1'

    /*
     * JACKSON SERIALIZATION
     * YAML via SnakeYaml
     * Afterburner for faster serialization
     * Guava integration
     * Smile for binary serialization
     * Jersey integration
     * Jaxb annotation support
     */
     compile "com.fasterxml.jackson.core:jackson-core:${jackson_version}"
     compile "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
     compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:${jackson_version}"
     compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jackson_version}"
     compile "com.fasterxml.jackson.module:jackson-module-afterburner:${jackson_version}"
     compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jackson_version}"
     compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jackson_version}"
     compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jackson_version}"
     compile 'org.yaml:snakeyaml:1.13'

    /*
     * @Inject and @Nullable support
     */
     compile 'javax.inject:javax.inject:1'
     compile 'com.google.code.findbugs:jsr305:1.3.9'

    /*
     * Jersey Spring Integration
     */
     compile 'org.glassfish.jersey.ext:jersey-spring3:2.11'

    /*
     * Linear algebra including GF(2) matrices
     * TODO: Move to a separate plugin / remove from core
     */
     compile 'colt:colt:1.2.0'

    /*
     * Kryo serialization -- faster generic Java serialization
     */
     compile 'com.esotericsoftware.kryo:kryo:2.22'

    /*
     * HAZELCAST - DISTRIBUTED DATA GRID
     * Transparent http clustering, distributed java.util collections
     */
     compile "com.hazelcast:hazelcast:${hazelcast_version}"
     compile "com.hazelcast:hazelcast-client:${hazelcast_version}"
     compile "com.hazelcast:hazelcast-wm:${hazelcast_version}"
     compile "com.hazelcast:hazelcast-spring:${hazelcast_version}"

    /*
     * EMBEDDED JETTY FOR LOCAL TESTING
     * TODO: Add support for Tomcat
     * TODO: Integrate with application plugin for standalone deployment
     */ 

     compile "asm:asm:3.3.1"
     compile "org.eclipse.jetty.aggregate:jetty-all:${jetty_version}"
     compile "org.eclipse.jetty:jetty-jsp:${jetty_version}"
     compile "org.eclipse.jetty:jetty-spring:${jetty_version}"
     compile "org.eclipse.jetty.websocket:websocket-server:${jetty_version}"
     compile "org.eclipse.jetty:jetty-continuation:${jetty_version}"
    /*
     * ATMOSPHERE 
     * Websocket / CometD support
     */
     compile "org.atmosphere:atmosphere-runtime:2.0.5"

    /*
     * TESTING
     */
     testCompile 'junit:junit:4.11'
     testCompile 'com.squareup.retrofit:retrofit:1.6.1'
     testCompile 'com.squareup.retrofit:retrofit-converters:1.6.1'
 }

 configurations {
    pom
}

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    /*wtp {
        facet {
            facet name: "java", version:"1.7"
            facet name:"jst.web" , version:"3.1"
        }
        }*/
        ext.sourceCompatibility=JavaVersion.VERSION_1_7
        ext.targetCompatibility=JavaVersion.VERSION_1_7
    }

    ext {
        snapshotUrl = "https://oss.sonatype.org/content/repositories/snapshots"
        releaseUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        localUrl = "file:/${project.projectDir}/artifacts"
    }

    ext.repoUrl = snapshotUrl

    task wrapper(type: Wrapper) {
        gradleVersion = '2.0'
    }

    task sourceJar (type : Jar) {
      classifier = 'sources'
      from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn:javadoc) {
      classifier = 'javadoc'
      from javadoc.destinationDir
  }

  ext."signing.keyId" = 'FDEB5A45'
  ext."signing.secretKeyRingFile" = '/Users/mtamayo/.gnupg/secring.gpg'
  ext."signing.password" = 'id'
  ext.isReleaseBuild = false

  if (ext.isReleaseBuild) {
    //(type : Sign, dependsOn: [jar, javadocJar, sourceJar]) 
    signing {
        sign configurations.archives
    }
    
    signing {
        sign configurations.pom
    }
}

artifacts {
    archives jar
    archives javadocJar
    archives sourceJar
}

if( !project.ext.hasProperty( 'user' ) ) {
    project.ext.user = ''
}

if( !project.ext.hasProperty( 'password') ) {
    project.ext.password = ''
}

publishing {
    repositories {
        maven { 
            url repoUrl
            credentials {
                username = project.ext.user   
                password = project.ext.password
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            version '0.1.0-SNAPSHOT'
            /*artifact ('README.md') {
                classifier = 'README'
                extension  = 'md'
                }*/

            //artifact javadocJar
            artifact sourceJar

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'rhizome'
                    description 'Light weight Java web framework'
                    url 'https://www.github.com/geekbeast/rhizome'
                    scm {
                        url 'https://www.github.com/geekbeast/rhizome'
                        connection 'https://www.github.com/geekbeast/rhizome'
                        developerConnection 'https://www.github.com/geekbeast/rhizome'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'geekbeast'
                            name 'Matthew Tamayo-Rios'
                            email 'matthew@geekbeast.com'
                        }
                    }
                }
            }
        }
    }
}