plugins {
    id 'org.inferred.processors' version '1.1'
}

//Easy semantic version based off describe + tags
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--long'
        standardOutput = stdout
    }
    def tagVer = stdout.toString().trim()
    def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

    if (tagVer.contains('dev')) {
        semVer += "-SNAPSHOT"
    }
    return semVer
}

description = "Java Framework for building clustered RESTful web applications"
group = "com.kryptnostic"
version = getVersionName()

apply plugin: "maven-publish"
apply plugin: "application"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: "idea"
//apply plugin: "war"
apply from: "publish.gradle"
apply plugin: "signing"
apply plugin: "jacoco"

mainClassName = "com.geekbeast.rhizome.core.Rhizome"

ext.sourceCompatibility=JavaVersion.VERSION_1_8
ext.targetCompatibility=JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven {
      url 'http://artifactory.krypt.int/artifactory/libs-snapshot/'
    }
    maven {
      url 'http://artifactory.krypt.int/artifactory/remote-repos/'
    }
    maven {
        url "https://build.shibboleth.net/nexus/content/groups/public/"
    }
    maven {
        url "http://maven.springframework.org/snapshot"
    }
    maven {
        url "http://maven.springframework.org/milestone"
    }
    maven {
        url "http://repo.maven.apache.org/maven2"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://raw.github.com/dkhenry/rethinkjava/mvn-repo"
    }

}

ext.spring_security_version='4.0.3.RELEASE'
ext.spring_framework_version='4.2.3.RELEASE'
ext.jackson_version='2.4.4'
ext.jetty_version='9.3.6.v20151106'
ext.hazelcast_version='3.5.4'
ext.slf4j_version='1.7.12'
ext.log4j_version='2.4.1'
ext.retrofit_version='1.9.0'
ext.cassandra_driver_version='3.0.0'
ext.immutables_version='2.1.0'
ext.snappy_version='1.1.2.1'
ext.lz4_version='1.3'
ext.netty_epoll_version='4.0.36.Final'
ext.netty_os_arch='linux-x86_64'

dependencies {

    /*
     * Immutables library for immutable objects
     */
    // processor comes from org.inferred.processors, https://github.com/palantir/gradle-processors
    processor "org.immutables:value:${immutables_version}"

    /*
     * Servlet API 3.1 
     * 100% Java Servlet Container and Servlet Configuration
     */
     compile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
     compile 'javax.servlet:javax.servlet-api:3.1.0'
     compile group: 'javax.servlet', name: 'jstl', version:'1.2'

    /*
     * SL4J + LOG4J2
     */
    compile group: "org.slf4j", name: "slf4j-api", version:"${slf4j_version}"

    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4j_version}" 
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4j_version}" 
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4j_version}" 

    /*
     * CORE SPRING FRAMEWORK DEPENDENCIES
     * Depending injection, asynchronous execution, task scheduling, aspect oriented proxies, and more.
     */
     compile "org.springframework:spring-core:${project.spring_framework_version}"
     compile "org.springframework:spring-beans:${project.spring_framework_version}"
     compile "org.springframework:spring-context:${project.spring_framework_version}"
     compile "org.springframework:spring-aop:${project.spring_framework_version}"
     compile "org.springframework:spring-web:${project.spring_framework_version}"
     compile "org.springframework:spring-webmvc:${project.spring_framework_version}"
     compile "org.springframework:spring-test:${project.spring_framework_version}"

    /*
     * SPRING SECURITY DEPENDENCIES
     * Solid and battle tested security AuthN/AuthZ framwork
     */
     compile "org.springframework.security:spring-security-core:${project.spring_security_version}"
     compile "org.springframework.security:spring-security-web:${project.spring_security_version}"
     compile "org.springframework.security:spring-security-ldap:${project.spring_security_version}"
     compile "org.springframework.security:spring-security-config:${project.spring_security_version}"

    /*
     * Metrics
     * Awesome reporting-- defaults to Graphite
     * TODO: Integrate Ryan's Spring integration 
     */
     compile 'com.codahale.metrics:metrics-core:3.0.2'
     compile 'com.codahale.metrics:metrics-servlets:3.0.2'
     compile 'com.codahale.metrics:metrics-graphite:3.0.2'
     compile 'com.ryantenney.metrics:metrics-spring:3.1.3'

    /*
     * GUAVA 
     * EventBus, FluentIterables, ListenableFutures and more
     */
     compile 'com.google.guava:guava:18.0'

    /*
     JODA TIME - A better datetime class.
     */
     compile 'joda-time:joda-time:2.9.1'

    /*
     * APACHE COMMONS
     * Logging, StringUtils, RandomStringUtils, IOUtils, and more
     */

     compile 'commons-io:commons-io:2.4'
     compile 'org.apache.commons:commons-lang3:3.4'
     compile 'commons-codec:commons-codec:1.9'

    /*
     * JACKSON SERIALIZATION
     * YAML via SnakeYaml
     * Afterburner for faster serialization
     * Guava integration
     * Smile for binary serialization
     * Jersey integration
     * Jaxb annotation support
     */
     compile "com.fasterxml.jackson.core:jackson-core:${jackson_version}"
     compile "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
     compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:${jackson_version}"
     compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jackson_version}"
     compile "com.fasterxml.jackson.module:jackson-module-afterburner:${jackson_version}"
     compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jackson_version}"
     compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jackson_version}"
     compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jackson_version}"
     compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jackson_version}"
     compile 'org.yaml:snakeyaml:1.13'
     //Needed to avoid NoSuchMethodErrors when using mockito + junit + spring
     compile "com.jayway.jsonpath:json-path-assert:1.1.0"

    /*
     * @Inject and @Nullable support
     */
     compile 'javax.inject:javax.inject:1'
     compile 'com.google.code.findbugs:jsr305:1.3.9'

    /*
     * Jersey Spring Integration
     */
     compile 'org.glassfish.jersey.ext:jersey-spring3:2.11'

    /*
     * HAZELCAST - DISTRIBUTED DATA GRID
     * Transparent http clustering, distributed java.util collections
     */
     compile "com.hazelcast:hazelcast:${hazelcast_version}"
     compile "com.hazelcast:hazelcast-client-new:${hazelcast_version}"
     compile "com.hazelcast:hazelcast-wm:${hazelcast_version}"
     compile "com.hazelcast:hazelcast-spring:${hazelcast_version}"

    /*
     * EMBEDDED JETTY FOR LOCAL TESTING
     * TODO: Add support for Tomcat
     * TODO: Integrate with application plugin for standalone deployment
     */ 
     compile "asm:asm:3.3.1"
     compile "org.eclipse.jetty.aggregate:jetty-all:${jetty_version}"
     //TODO: Once GA version of jetty-jsp is released update version.
     //compile "org.eclipse.jetty:jetty-jsp:9.3.0.M1" 
     compile "org.eclipse.jetty:jetty-spring:${jetty_version}"
     compile "org.eclipse.jetty.websocket:websocket-server:${jetty_version}"
     compile "org.eclipse.jetty.websocket:javax-websocket-server-impl:${jetty_version}"
     compile "org.eclipse.jetty:jetty-continuation:${jetty_version}"

     compile "io.netty:netty-transport-native-epoll:${netty_epoll_version}:${netty_os_arch}"

    /*
     * JAVAMAIL
     * Java email client.
     */
     compile 'javax.mail:javax.mail-api:1.5.2'
     compile 'javax.mail:mail:1.5.0-b01'
     compile "org.jodd:jodd-mail:3.6.6"
     
     /*
      * RethinkDB
      */
     compile "com.dkhenry:rethinkjava:0.9"
     // snapshot official rethink driver
     // compile "com.rethinkdb:rethinkdb-driver:${rethinkdb_snapshot_version}"
     
     /**
      * Cassandra
      */
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: "${cassandra_driver_version}"
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-extras', version: "${cassandra_driver_version}"
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-mapping', version: "${cassandra_driver_version}"
    compile "org.xerial.snappy:snappy-java:${snappy_version}"
    compile "net.jpountz.lz4:lz4:${lz4_version}"

    /*
     * Jars in lib folder, generally Hyperdex
     */
     compile fileTree( dir: "lib/", include: "*.jar")

    /*
     * TESTING
     */
     testCompile 'junit:junit:4.12'
     compile 'com.squareup.retrofit:retrofit:1.9.0'
     compile 'com.squareup.retrofit:retrofit-converters:1.9.0'
     
    /*
     * WEBSOCKET DEPENDENCIES
     */
      
      compile "org.springframework:spring-websocket:${project.spring_framework_version}"
      compile "org.springframework:spring-messaging:${project.spring_framework_version}"
      compile "org.springframework.integration:spring-integration-websocket:4.2.3.RELEASE"
 }

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility=JavaVersion.VERSION_1_8
    ext.targetCompatibility=JavaVersion.VERSION_1_8
}

task sourcesJar(type : Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task testJar(type: Jar, dependsOn: testClasses) {
    classifier = 'tests'
    from sourceSets.test.output
}

configurations {
    tests
      published.extendsFrom tests, archives
}

install {
    configuration = configurations.published
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

artifacts {
    archives jar,sourcesJar,javadocJar
    tests testJar
}
